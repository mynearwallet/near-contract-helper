name: Deploy to Amazon ECS

on:
  push:
    branches:
      - cicd
  pull_request:
    branches:
      - develop
      - master
    types: [closed]

env:
  ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: staging

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ASSUMED_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          #need to add sts:TagSession to role
          role-skip-session-tagging: true
          role-duration-seconds: 1200
     
      - name: Configure env INDEXER_DB_CONNECTION
        uses: 'marvinpinto/action-inject-ssm-secrets@v1.2.1'
        with:
          ssm_parameter: '/mynearwallet/indexer_db_connection'
          env_variable_name: 'INDEXER_DB_CONNECTION'

      - name: prepare env
        run: cp .env.sample .env  && env | grep -i indexer >> .env 
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set docker image name
        id: image-name
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"
          
      - name: Build and push docker image
        run: |
          docker build -t ${{ steps.image-name.outputs.image }} .
          docker push ${{ steps.image-name.outputs.image }}     
       
      - name: Deploy to eks
        run: |
         aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
         kubectl set image --namespace=${{ secrets.K8s_NAMESPACE_DEV }} deployment/${{ secrets.K8s_DEPLOYMENT_NAME_DEV }} ${{ secrets.K8s_DEPLOYMENT_NAME_DEV }}=${{ steps.image-name.outputs.image }} --local=false

      
#       - name: Configure env INDEXER_DB_REPLICAS
#         uses: 'marvinpinto/action-inject-ssm-secrets@v1.2.1'
#         with:
#           ssm_parameter: '/mynearwallet/indexer_db_urls'
#           env_variable_name: 'INDEXER_DB_REPLICAS'




